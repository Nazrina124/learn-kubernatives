apiVersion: apps/v1
kind: Deployment
metadata:
  name: php-apache
spec:
  replicas: 3
  selector:
    matchLabels:
      run: php-apache
  template:
    metadata:
      labels:
        run: php-apache
    spec:
      containers:
      - name: php-apache
        image: registry.k8s.io/hpa-example
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
---
apiVersion: v1
kind: Service
metadata:
  name: php-apache
  labels:
    run: php-apache
spec:
  ports:
  - port: 80
  selector:
    run: php-apache
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: php-apache
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: php-apache
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50     


#### command kubectl apply -f ymlfile name
##### kubectl get hpa --watch

### HPA has the limit to scale down that is 1

###### extended autoscaling options is keda is a tool help in extending monitoring based on different citeria.

#### to see aggresive scaling behavior is added
##### VPA vertical autoscaling doesnot come inbuit with kubeernetes.
#### intall command for vpa- cd autoscaler/vertical-pod-autoscaler/hack/
###### ./vpa-up.sh will install vpa
######  